{"ast":null,"code":"/**\n * Copyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\n * License: MIT - http://mrgnrdrck.mit-license.org\n *\n * https://github.com/mroderick/PubSubJS\n */\n\n(function (root, factory) {\n  'use strict';\n\n  var PubSub = {};\n  if (root.PubSub) {\n    PubSub = root.PubSub;\n    console.warn(\"PubSub already loaded, using existing version\");\n  } else {\n    root.PubSub = PubSub;\n    factory(PubSub);\n  }\n  // CommonJS and Node.js module support\n  if (typeof exports === 'object') {\n    if (module !== undefined && module.exports) {\n      exports = module.exports = PubSub; // Node.js specific `module.exports`\n    }\n\n    exports.PubSub = PubSub; // CommonJS module 1.1.1 spec\n    module.exports = exports = PubSub; // CommonJS\n  }\n  // AMD support\n  /* eslint-disable no-undef */else if (typeof define === 'function' && define.amd) {\n    define(function () {\n      return PubSub;\n    });\n    /* eslint-enable no-undef */\n  }\n})(typeof window === 'object' && window || this, function (PubSub) {\n  'use strict';\n\n  var messages = {},\n    lastUid = -1,\n    ALL_SUBSCRIBING_MSG = '*';\n  function hasKeys(obj) {\n    var key;\n    for (key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Returns a function that throws the passed exception, for use as argument for setTimeout\n   * @alias throwException\n   * @function\n   * @param { Object } ex An Error object\n   */\n  function throwException(ex) {\n    return function reThrowException() {\n      throw ex;\n    };\n  }\n  function callSubscriberWithDelayedExceptions(subscriber, message, data) {\n    try {\n      subscriber(message, data);\n    } catch (ex) {\n      setTimeout(throwException(ex), 0);\n    }\n  }\n  function callSubscriberWithImmediateExceptions(subscriber, message, data) {\n    subscriber(message, data);\n  }\n  function deliverMessage(originalMessage, matchedMessage, data, immediateExceptions) {\n    var subscribers = messages[matchedMessage],\n      callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n      s;\n    if (!Object.prototype.hasOwnProperty.call(messages, matchedMessage)) {\n      return;\n    }\n    for (s in subscribers) {\n      if (Object.prototype.hasOwnProperty.call(subscribers, s)) {\n        callSubscriber(subscribers[s], originalMessage, data);\n      }\n    }\n  }\n  function createDeliveryFunction(message, data, immediateExceptions) {\n    return function deliverNamespaced() {\n      var topic = String(message),\n        position = topic.lastIndexOf('.');\n\n      // deliver the message as it is now\n      deliverMessage(message, message, data, immediateExceptions);\n\n      // trim the hierarchy and deliver message to each level\n      while (position !== -1) {\n        topic = topic.substr(0, position);\n        position = topic.lastIndexOf('.');\n        deliverMessage(message, topic, data, immediateExceptions);\n      }\n      deliverMessage(message, ALL_SUBSCRIBING_MSG, data, immediateExceptions);\n    };\n  }\n  function hasDirectSubscribersFor(message) {\n    var topic = String(message),\n      found = Boolean(Object.prototype.hasOwnProperty.call(messages, topic) && hasKeys(messages[topic]));\n    return found;\n  }\n  function messageHasSubscribers(message) {\n    var topic = String(message),\n      found = hasDirectSubscribersFor(topic) || hasDirectSubscribersFor(ALL_SUBSCRIBING_MSG),\n      position = topic.lastIndexOf('.');\n    while (!found && position !== -1) {\n      topic = topic.substr(0, position);\n      position = topic.lastIndexOf('.');\n      found = hasDirectSubscribersFor(topic);\n    }\n    return found;\n  }\n  function publish(message, data, sync, immediateExceptions) {\n    message = typeof message === 'symbol' ? message.toString() : message;\n    var deliver = createDeliveryFunction(message, data, immediateExceptions),\n      hasSubscribers = messageHasSubscribers(message);\n    if (!hasSubscribers) {\n      return false;\n    }\n    if (sync === true) {\n      deliver();\n    } else {\n      setTimeout(deliver, 0);\n    }\n    return true;\n  }\n\n  /**\n   * Publishes the message, passing the data to it's subscribers\n   * @function\n   * @alias publish\n   * @param { String } message The message to publish\n   * @param {} data The data to pass to subscribers\n   * @return { Boolean }\n   */\n  PubSub.publish = function (message, data) {\n    return publish(message, data, false, PubSub.immediateExceptions);\n  };\n\n  /**\n   * Publishes the message synchronously, passing the data to it's subscribers\n   * @function\n   * @alias publishSync\n   * @param { String } message The message to publish\n   * @param {} data The data to pass to subscribers\n   * @return { Boolean }\n   */\n  PubSub.publishSync = function (message, data) {\n    return publish(message, data, true, PubSub.immediateExceptions);\n  };\n\n  /**\n   * Subscribes the passed function to the passed message. Every returned token is unique and should be stored if you need to unsubscribe\n   * @function\n   * @alias subscribe\n   * @param { String } message The message to subscribe to\n   * @param { Function } func The function to call when a new message is published\n   * @return { String }\n   */\n  PubSub.subscribe = function (message, func) {\n    if (typeof func !== 'function') {\n      return false;\n    }\n    message = typeof message === 'symbol' ? message.toString() : message;\n\n    // message is not registered yet\n    if (!Object.prototype.hasOwnProperty.call(messages, message)) {\n      messages[message] = {};\n    }\n\n    // forcing token as String, to allow for future expansions without breaking usage\n    // and allow for easy use as key names for the 'messages' object\n    var token = 'uid_' + String(++lastUid);\n    messages[message][token] = func;\n\n    // return token for unsubscribing\n    return token;\n  };\n  PubSub.subscribeAll = function (func) {\n    return PubSub.subscribe(ALL_SUBSCRIBING_MSG, func);\n  };\n\n  /**\n   * Subscribes the passed function to the passed message once\n   * @function\n   * @alias subscribeOnce\n   * @param { String } message The message to subscribe to\n   * @param { Function } func The function to call when a new message is published\n   * @return { PubSub }\n   */\n  PubSub.subscribeOnce = function (message, func) {\n    var token = PubSub.subscribe(message, function () {\n      // before func apply, unsubscribe message\n      PubSub.unsubscribe(token);\n      func.apply(this, arguments);\n    });\n    return PubSub;\n  };\n\n  /**\n   * Clears all subscriptions\n   * @function\n   * @public\n   * @alias clearAllSubscriptions\n   */\n  PubSub.clearAllSubscriptions = function clearAllSubscriptions() {\n    messages = {};\n  };\n\n  /**\n   * Clear subscriptions by the topic\n   * @function\n   * @public\n   * @alias clearAllSubscriptions\n   * @return { int }\n   */\n  PubSub.clearSubscriptions = function clearSubscriptions(topic) {\n    var m;\n    for (m in messages) {\n      if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n        delete messages[m];\n      }\n    }\n  };\n\n  /**\n     Count subscriptions by the topic\n   * @function\n   * @public\n   * @alias countSubscriptions\n   * @return { Array }\n  */\n  PubSub.countSubscriptions = function countSubscriptions(topic) {\n    var m;\n    // eslint-disable-next-line no-unused-vars\n    var token;\n    var count = 0;\n    for (m in messages) {\n      if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n        for (token in messages[m]) {\n          count++;\n        }\n        break;\n      }\n    }\n    return count;\n  };\n\n  /**\n     Gets subscriptions by the topic\n   * @function\n   * @public\n   * @alias getSubscriptions\n  */\n  PubSub.getSubscriptions = function getSubscriptions(topic) {\n    var m;\n    var list = [];\n    for (m in messages) {\n      if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n        list.push(m);\n      }\n    }\n    return list;\n  };\n\n  /**\n   * Removes subscriptions\n   *\n   * - When passed a token, removes a specific subscription.\n   *\n  * - When passed a function, removes all subscriptions for that function\n   *\n  * - When passed a topic, removes all subscriptions for that topic (hierarchy)\n   * @function\n   * @public\n   * @alias subscribeOnce\n   * @param { String | Function } value A token, function or topic to unsubscribe from\n   * @example // Unsubscribing with a token\n   * var token = PubSub.subscribe('mytopic', myFunc);\n   * PubSub.unsubscribe(token);\n   * @example // Unsubscribing with a function\n   * PubSub.unsubscribe(myFunc);\n   * @example // Unsubscribing from a topic\n   * PubSub.unsubscribe('mytopic');\n   */\n  PubSub.unsubscribe = function (value) {\n    var descendantTopicExists = function (topic) {\n        var m;\n        for (m in messages) {\n          if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n            // a descendant of the topic exists:\n            return true;\n          }\n        }\n        return false;\n      },\n      isTopic = typeof value === 'string' && (Object.prototype.hasOwnProperty.call(messages, value) || descendantTopicExists(value)),\n      isToken = !isTopic && typeof value === 'string',\n      isFunction = typeof value === 'function',\n      result = false,\n      m,\n      message,\n      t;\n    if (isTopic) {\n      PubSub.clearSubscriptions(value);\n      return;\n    }\n    for (m in messages) {\n      if (Object.prototype.hasOwnProperty.call(messages, m)) {\n        message = messages[m];\n        if (isToken && message[value]) {\n          delete message[value];\n          result = value;\n          // tokens are unique, so we can just stop here\n          break;\n        }\n        if (isFunction) {\n          for (t in message) {\n            if (Object.prototype.hasOwnProperty.call(message, t) && message[t] === value) {\n              delete message[t];\n              result = true;\n            }\n          }\n        }\n      }\n    }\n    return result;\n  };\n});","map":{"version":3,"names":["root","factory","PubSub","console","warn","exports","module","undefined","define","amd","window","messages","lastUid","ALL_SUBSCRIBING_MSG","hasKeys","obj","key","Object","prototype","hasOwnProperty","call","throwException","ex","reThrowException","callSubscriberWithDelayedExceptions","subscriber","message","data","setTimeout","callSubscriberWithImmediateExceptions","deliverMessage","originalMessage","matchedMessage","immediateExceptions","subscribers","callSubscriber","s","createDeliveryFunction","deliverNamespaced","topic","String","position","lastIndexOf","substr","hasDirectSubscribersFor","found","Boolean","messageHasSubscribers","publish","sync","toString","deliver","hasSubscribers","publishSync","subscribe","func","token","subscribeAll","subscribeOnce","unsubscribe","apply","arguments","clearAllSubscriptions","clearSubscriptions","m","indexOf","countSubscriptions","count","getSubscriptions","list","push","value","descendantTopicExists","isTopic","isToken","isFunction","result","t"],"sources":["/Users/Shared/Files From f.localized/REACT-projects/02-Advanced/node_modules/pubsub-js/src/pubsub.js"],"sourcesContent":["/**\n * Copyright (c) 2010,2011,2012,2013,2014 Morgan Roderick http://roderick.dk\n * License: MIT - http://mrgnrdrck.mit-license.org\n *\n * https://github.com/mroderick/PubSubJS\n */\n\n(function (root, factory){\n    'use strict';\n\n    var PubSub = {};\n\n    if (root.PubSub) {\n        PubSub = root.PubSub;\n        console.warn(\"PubSub already loaded, using existing version\");\n    } else {\n        root.PubSub = PubSub;\n        factory(PubSub);\n    }\n    // CommonJS and Node.js module support\n    if (typeof exports === 'object'){\n        if (module !== undefined && module.exports) {\n            exports = module.exports = PubSub; // Node.js specific `module.exports`\n        }\n        exports.PubSub = PubSub; // CommonJS module 1.1.1 spec\n        module.exports = exports = PubSub; // CommonJS\n    }\n    // AMD support\n    /* eslint-disable no-undef */\n    else if (typeof define === 'function' && define.amd){\n        define(function() { return PubSub; });\n        /* eslint-enable no-undef */\n    }\n\n}(( typeof window === 'object' && window ) || this, function (PubSub){\n    'use strict';\n\n    var messages = {},\n        lastUid = -1,\n        ALL_SUBSCRIBING_MSG = '*';\n\n    function hasKeys(obj){\n        var key;\n\n        for (key in obj){\n            if ( Object.prototype.hasOwnProperty.call(obj, key) ){\n                return true;\n            }\n        }\n        return false;\n    }\n\n    /**\n     * Returns a function that throws the passed exception, for use as argument for setTimeout\n     * @alias throwException\n     * @function\n     * @param { Object } ex An Error object\n     */\n    function throwException( ex ){\n        return function reThrowException(){\n            throw ex;\n        };\n    }\n\n    function callSubscriberWithDelayedExceptions( subscriber, message, data ){\n        try {\n            subscriber( message, data );\n        } catch( ex ){\n            setTimeout( throwException( ex ), 0);\n        }\n    }\n\n    function callSubscriberWithImmediateExceptions( subscriber, message, data ){\n        subscriber( message, data );\n    }\n\n    function deliverMessage( originalMessage, matchedMessage, data, immediateExceptions ){\n        var subscribers = messages[matchedMessage],\n            callSubscriber = immediateExceptions ? callSubscriberWithImmediateExceptions : callSubscriberWithDelayedExceptions,\n            s;\n\n        if ( !Object.prototype.hasOwnProperty.call( messages, matchedMessage ) ) {\n            return;\n        }\n\n        for (s in subscribers){\n            if ( Object.prototype.hasOwnProperty.call(subscribers, s)){\n                callSubscriber( subscribers[s], originalMessage, data );\n            }\n        }\n    }\n\n    function createDeliveryFunction( message, data, immediateExceptions ){\n        return function deliverNamespaced(){\n            var topic = String( message ),\n                position = topic.lastIndexOf( '.' );\n\n            // deliver the message as it is now\n            deliverMessage(message, message, data, immediateExceptions);\n\n            // trim the hierarchy and deliver message to each level\n            while( position !== -1 ){\n                topic = topic.substr( 0, position );\n                position = topic.lastIndexOf('.');\n                deliverMessage( message, topic, data, immediateExceptions );\n            }\n\n            deliverMessage(message, ALL_SUBSCRIBING_MSG, data, immediateExceptions);\n        };\n    }\n\n    function hasDirectSubscribersFor( message ) {\n        var topic = String( message ),\n            found = Boolean(Object.prototype.hasOwnProperty.call( messages, topic ) && hasKeys(messages[topic]));\n\n        return found;\n    }\n\n    function messageHasSubscribers( message ){\n        var topic = String( message ),\n            found = hasDirectSubscribersFor(topic) || hasDirectSubscribersFor(ALL_SUBSCRIBING_MSG),\n            position = topic.lastIndexOf( '.' );\n\n        while ( !found && position !== -1 ){\n            topic = topic.substr( 0, position );\n            position = topic.lastIndexOf( '.' );\n            found = hasDirectSubscribersFor(topic);\n        }\n\n        return found;\n    }\n\n    function publish( message, data, sync, immediateExceptions ){\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        var deliver = createDeliveryFunction( message, data, immediateExceptions ),\n            hasSubscribers = messageHasSubscribers( message );\n\n        if ( !hasSubscribers ){\n            return false;\n        }\n\n        if ( sync === true ){\n            deliver();\n        } else {\n            setTimeout( deliver, 0 );\n        }\n        return true;\n    }\n\n    /**\n     * Publishes the message, passing the data to it's subscribers\n     * @function\n     * @alias publish\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publish = function( message, data ){\n        return publish( message, data, false, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Publishes the message synchronously, passing the data to it's subscribers\n     * @function\n     * @alias publishSync\n     * @param { String } message The message to publish\n     * @param {} data The data to pass to subscribers\n     * @return { Boolean }\n     */\n    PubSub.publishSync = function( message, data ){\n        return publish( message, data, true, PubSub.immediateExceptions );\n    };\n\n    /**\n     * Subscribes the passed function to the passed message. Every returned token is unique and should be stored if you need to unsubscribe\n     * @function\n     * @alias subscribe\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { String }\n     */\n    PubSub.subscribe = function( message, func ){\n        if ( typeof func !== 'function'){\n            return false;\n        }\n\n        message = (typeof message === 'symbol') ? message.toString() : message;\n\n        // message is not registered yet\n        if ( !Object.prototype.hasOwnProperty.call( messages, message ) ){\n            messages[message] = {};\n        }\n\n        // forcing token as String, to allow for future expansions without breaking usage\n        // and allow for easy use as key names for the 'messages' object\n        var token = 'uid_' + String(++lastUid);\n        messages[message][token] = func;\n\n        // return token for unsubscribing\n        return token;\n    };\n\n    PubSub.subscribeAll = function( func ){\n        return PubSub.subscribe(ALL_SUBSCRIBING_MSG, func);\n    };\n\n    /**\n     * Subscribes the passed function to the passed message once\n     * @function\n     * @alias subscribeOnce\n     * @param { String } message The message to subscribe to\n     * @param { Function } func The function to call when a new message is published\n     * @return { PubSub }\n     */\n    PubSub.subscribeOnce = function( message, func ){\n        var token = PubSub.subscribe( message, function(){\n            // before func apply, unsubscribe message\n            PubSub.unsubscribe( token );\n            func.apply( this, arguments );\n        });\n        return PubSub;\n    };\n\n    /**\n     * Clears all subscriptions\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     */\n    PubSub.clearAllSubscriptions = function clearAllSubscriptions(){\n        messages = {};\n    };\n\n    /**\n     * Clear subscriptions by the topic\n     * @function\n     * @public\n     * @alias clearAllSubscriptions\n     * @return { int }\n     */\n    PubSub.clearSubscriptions = function clearSubscriptions(topic){\n        var m;\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                delete messages[m];\n            }\n        }\n    };\n\n    /**\n       Count subscriptions by the topic\n     * @function\n     * @public\n     * @alias countSubscriptions\n     * @return { Array }\n    */\n    PubSub.countSubscriptions = function countSubscriptions(topic){\n        var m;\n        // eslint-disable-next-line no-unused-vars\n        var token;\n        var count = 0;\n        for (m in messages) {\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0) {\n                for (token in messages[m]) {\n                    count++;\n                }\n                break;\n            }\n        }\n        return count;\n    };\n\n\n    /**\n       Gets subscriptions by the topic\n     * @function\n     * @public\n     * @alias getSubscriptions\n    */\n    PubSub.getSubscriptions = function getSubscriptions(topic){\n        var m;\n        var list = [];\n        for (m in messages){\n            if (Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0){\n                list.push(m);\n            }\n        }\n        return list;\n    };\n\n    /**\n     * Removes subscriptions\n     *\n     * - When passed a token, removes a specific subscription.\n     *\n\t * - When passed a function, removes all subscriptions for that function\n     *\n\t * - When passed a topic, removes all subscriptions for that topic (hierarchy)\n     * @function\n     * @public\n     * @alias subscribeOnce\n     * @param { String | Function } value A token, function or topic to unsubscribe from\n     * @example // Unsubscribing with a token\n     * var token = PubSub.subscribe('mytopic', myFunc);\n     * PubSub.unsubscribe(token);\n     * @example // Unsubscribing with a function\n     * PubSub.unsubscribe(myFunc);\n     * @example // Unsubscribing from a topic\n     * PubSub.unsubscribe('mytopic');\n     */\n    PubSub.unsubscribe = function(value){\n        var descendantTopicExists = function(topic) {\n                var m;\n                for ( m in messages ){\n                    if ( Object.prototype.hasOwnProperty.call(messages, m) && m.indexOf(topic) === 0 ){\n                        // a descendant of the topic exists:\n                        return true;\n                    }\n                }\n\n                return false;\n            },\n            isTopic    = typeof value === 'string' && ( Object.prototype.hasOwnProperty.call(messages, value) || descendantTopicExists(value) ),\n            isToken    = !isTopic && typeof value === 'string',\n            isFunction = typeof value === 'function',\n            result = false,\n            m, message, t;\n\n        if (isTopic){\n            PubSub.clearSubscriptions(value);\n            return;\n        }\n\n        for ( m in messages ){\n            if ( Object.prototype.hasOwnProperty.call( messages, m ) ){\n                message = messages[m];\n\n                if ( isToken && message[value] ){\n                    delete message[value];\n                    result = value;\n                    // tokens are unique, so we can just stop here\n                    break;\n                }\n\n                if (isFunction) {\n                    for ( t in message ){\n                        if (Object.prototype.hasOwnProperty.call(message, t) && message[t] === value){\n                            delete message[t];\n                            result = true;\n                        }\n                    }\n                }\n            }\n        }\n\n        return result;\n    };\n}));\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEC,WAAUA,IAAI,EAAEC,OAAO,EAAC;EACrB,YAAY;;EAEZ,IAAIC,MAAM,GAAG,CAAC,CAAC;EAEf,IAAIF,IAAI,CAACE,MAAM,EAAE;IACbA,MAAM,GAAGF,IAAI,CAACE,MAAM;IACpBC,OAAO,CAACC,IAAI,CAAC,+CAA+C,CAAC;EACjE,CAAC,MAAM;IACHJ,IAAI,CAACE,MAAM,GAAGA,MAAM;IACpBD,OAAO,CAACC,MAAM,CAAC;EACnB;EACA;EACA,IAAI,OAAOG,OAAO,KAAK,QAAQ,EAAC;IAC5B,IAAIC,MAAM,KAAKC,SAAS,IAAID,MAAM,CAACD,OAAO,EAAE;MACxCA,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGH,MAAM,CAAC,CAAC;IACvC;;IACAG,OAAO,CAACH,MAAM,GAAGA,MAAM,CAAC,CAAC;IACzBI,MAAM,CAACD,OAAO,GAAGA,OAAO,GAAGH,MAAM,CAAC,CAAC;EACvC;EACA;EACA,kCACK,IAAI,OAAOM,MAAM,KAAK,UAAU,IAAIA,MAAM,CAACC,GAAG,EAAC;IAChDD,MAAM,CAAC,YAAW;MAAE,OAAON,MAAM;IAAE,CAAC,CAAC;IACrC;EACJ;AAEJ,CAAC,EAAG,OAAOQ,MAAM,KAAK,QAAQ,IAAIA,MAAM,IAAM,IAAI,EAAE,UAAUR,MAAM,EAAC;EACjE,YAAY;;EAEZ,IAAIS,QAAQ,GAAG,CAAC,CAAC;IACbC,OAAO,GAAG,CAAC,CAAC;IACZC,mBAAmB,GAAG,GAAG;EAE7B,SAASC,OAAO,CAACC,GAAG,EAAC;IACjB,IAAIC,GAAG;IAEP,KAAKA,GAAG,IAAID,GAAG,EAAC;MACZ,IAAKE,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACL,GAAG,EAAEC,GAAG,CAAC,EAAE;QACjD,OAAO,IAAI;MACf;IACJ;IACA,OAAO,KAAK;EAChB;;EAEA;AACJ;AACA;AACA;AACA;AACA;EACI,SAASK,cAAc,CAAEC,EAAE,EAAE;IACzB,OAAO,SAASC,gBAAgB,GAAE;MAC9B,MAAMD,EAAE;IACZ,CAAC;EACL;EAEA,SAASE,mCAAmC,CAAEC,UAAU,EAAEC,OAAO,EAAEC,IAAI,EAAE;IACrE,IAAI;MACAF,UAAU,CAAEC,OAAO,EAAEC,IAAI,CAAE;IAC/B,CAAC,CAAC,OAAOL,EAAE,EAAE;MACTM,UAAU,CAAEP,cAAc,CAAEC,EAAE,CAAE,EAAE,CAAC,CAAC;IACxC;EACJ;EAEA,SAASO,qCAAqC,CAAEJ,UAAU,EAAEC,OAAO,EAAEC,IAAI,EAAE;IACvEF,UAAU,CAAEC,OAAO,EAAEC,IAAI,CAAE;EAC/B;EAEA,SAASG,cAAc,CAAEC,eAAe,EAAEC,cAAc,EAAEL,IAAI,EAAEM,mBAAmB,EAAE;IACjF,IAAIC,WAAW,GAAGvB,QAAQ,CAACqB,cAAc,CAAC;MACtCG,cAAc,GAAGF,mBAAmB,GAAGJ,qCAAqC,GAAGL,mCAAmC;MAClHY,CAAC;IAEL,IAAK,CAACnB,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAET,QAAQ,EAAEqB,cAAc,CAAE,EAAG;MACrE;IACJ;IAEA,KAAKI,CAAC,IAAIF,WAAW,EAAC;MAClB,IAAKjB,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACc,WAAW,EAAEE,CAAC,CAAC,EAAC;QACtDD,cAAc,CAAED,WAAW,CAACE,CAAC,CAAC,EAAEL,eAAe,EAAEJ,IAAI,CAAE;MAC3D;IACJ;EACJ;EAEA,SAASU,sBAAsB,CAAEX,OAAO,EAAEC,IAAI,EAAEM,mBAAmB,EAAE;IACjE,OAAO,SAASK,iBAAiB,GAAE;MAC/B,IAAIC,KAAK,GAAGC,MAAM,CAAEd,OAAO,CAAE;QACzBe,QAAQ,GAAGF,KAAK,CAACG,WAAW,CAAE,GAAG,CAAE;;MAEvC;MACAZ,cAAc,CAACJ,OAAO,EAAEA,OAAO,EAAEC,IAAI,EAAEM,mBAAmB,CAAC;;MAE3D;MACA,OAAOQ,QAAQ,KAAK,CAAC,CAAC,EAAE;QACpBF,KAAK,GAAGA,KAAK,CAACI,MAAM,CAAE,CAAC,EAAEF,QAAQ,CAAE;QACnCA,QAAQ,GAAGF,KAAK,CAACG,WAAW,CAAC,GAAG,CAAC;QACjCZ,cAAc,CAAEJ,OAAO,EAAEa,KAAK,EAAEZ,IAAI,EAAEM,mBAAmB,CAAE;MAC/D;MAEAH,cAAc,CAACJ,OAAO,EAAEb,mBAAmB,EAAEc,IAAI,EAAEM,mBAAmB,CAAC;IAC3E,CAAC;EACL;EAEA,SAASW,uBAAuB,CAAElB,OAAO,EAAG;IACxC,IAAIa,KAAK,GAAGC,MAAM,CAAEd,OAAO,CAAE;MACzBmB,KAAK,GAAGC,OAAO,CAAC7B,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAET,QAAQ,EAAE4B,KAAK,CAAE,IAAIzB,OAAO,CAACH,QAAQ,CAAC4B,KAAK,CAAC,CAAC,CAAC;IAExG,OAAOM,KAAK;EAChB;EAEA,SAASE,qBAAqB,CAAErB,OAAO,EAAE;IACrC,IAAIa,KAAK,GAAGC,MAAM,CAAEd,OAAO,CAAE;MACzBmB,KAAK,GAAGD,uBAAuB,CAACL,KAAK,CAAC,IAAIK,uBAAuB,CAAC/B,mBAAmB,CAAC;MACtF4B,QAAQ,GAAGF,KAAK,CAACG,WAAW,CAAE,GAAG,CAAE;IAEvC,OAAQ,CAACG,KAAK,IAAIJ,QAAQ,KAAK,CAAC,CAAC,EAAE;MAC/BF,KAAK,GAAGA,KAAK,CAACI,MAAM,CAAE,CAAC,EAAEF,QAAQ,CAAE;MACnCA,QAAQ,GAAGF,KAAK,CAACG,WAAW,CAAE,GAAG,CAAE;MACnCG,KAAK,GAAGD,uBAAuB,CAACL,KAAK,CAAC;IAC1C;IAEA,OAAOM,KAAK;EAChB;EAEA,SAASG,OAAO,CAAEtB,OAAO,EAAEC,IAAI,EAAEsB,IAAI,EAAEhB,mBAAmB,EAAE;IACxDP,OAAO,GAAI,OAAOA,OAAO,KAAK,QAAQ,GAAIA,OAAO,CAACwB,QAAQ,EAAE,GAAGxB,OAAO;IAEtE,IAAIyB,OAAO,GAAGd,sBAAsB,CAAEX,OAAO,EAAEC,IAAI,EAAEM,mBAAmB,CAAE;MACtEmB,cAAc,GAAGL,qBAAqB,CAAErB,OAAO,CAAE;IAErD,IAAK,CAAC0B,cAAc,EAAE;MAClB,OAAO,KAAK;IAChB;IAEA,IAAKH,IAAI,KAAK,IAAI,EAAE;MAChBE,OAAO,EAAE;IACb,CAAC,MAAM;MACHvB,UAAU,CAAEuB,OAAO,EAAE,CAAC,CAAE;IAC5B;IACA,OAAO,IAAI;EACf;;EAEA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIjD,MAAM,CAAC8C,OAAO,GAAG,UAAUtB,OAAO,EAAEC,IAAI,EAAE;IACtC,OAAOqB,OAAO,CAAEtB,OAAO,EAAEC,IAAI,EAAE,KAAK,EAAEzB,MAAM,CAAC+B,mBAAmB,CAAE;EACtE,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI/B,MAAM,CAACmD,WAAW,GAAG,UAAU3B,OAAO,EAAEC,IAAI,EAAE;IAC1C,OAAOqB,OAAO,CAAEtB,OAAO,EAAEC,IAAI,EAAE,IAAI,EAAEzB,MAAM,CAAC+B,mBAAmB,CAAE;EACrE,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACI/B,MAAM,CAACoD,SAAS,GAAG,UAAU5B,OAAO,EAAE6B,IAAI,EAAE;IACxC,IAAK,OAAOA,IAAI,KAAK,UAAU,EAAC;MAC5B,OAAO,KAAK;IAChB;IAEA7B,OAAO,GAAI,OAAOA,OAAO,KAAK,QAAQ,GAAIA,OAAO,CAACwB,QAAQ,EAAE,GAAGxB,OAAO;;IAEtE;IACA,IAAK,CAACT,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAET,QAAQ,EAAEe,OAAO,CAAE,EAAE;MAC7Df,QAAQ,CAACe,OAAO,CAAC,GAAG,CAAC,CAAC;IAC1B;;IAEA;IACA;IACA,IAAI8B,KAAK,GAAG,MAAM,GAAGhB,MAAM,CAAC,EAAE5B,OAAO,CAAC;IACtCD,QAAQ,CAACe,OAAO,CAAC,CAAC8B,KAAK,CAAC,GAAGD,IAAI;;IAE/B;IACA,OAAOC,KAAK;EAChB,CAAC;EAEDtD,MAAM,CAACuD,YAAY,GAAG,UAAUF,IAAI,EAAE;IAClC,OAAOrD,MAAM,CAACoD,SAAS,CAACzC,mBAAmB,EAAE0C,IAAI,CAAC;EACtD,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIrD,MAAM,CAACwD,aAAa,GAAG,UAAUhC,OAAO,EAAE6B,IAAI,EAAE;IAC5C,IAAIC,KAAK,GAAGtD,MAAM,CAACoD,SAAS,CAAE5B,OAAO,EAAE,YAAU;MAC7C;MACAxB,MAAM,CAACyD,WAAW,CAAEH,KAAK,CAAE;MAC3BD,IAAI,CAACK,KAAK,CAAE,IAAI,EAAEC,SAAS,CAAE;IACjC,CAAC,CAAC;IACF,OAAO3D,MAAM;EACjB,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;EACIA,MAAM,CAAC4D,qBAAqB,GAAG,SAASA,qBAAqB,GAAE;IAC3DnD,QAAQ,GAAG,CAAC,CAAC;EACjB,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACIT,MAAM,CAAC6D,kBAAkB,GAAG,SAASA,kBAAkB,CAACxB,KAAK,EAAC;IAC1D,IAAIyB,CAAC;IACL,KAAKA,CAAC,IAAIrD,QAAQ,EAAC;MACf,IAAIM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,QAAQ,EAAEqD,CAAC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC1B,KAAK,CAAC,KAAK,CAAC,EAAC;QAC5E,OAAO5B,QAAQ,CAACqD,CAAC,CAAC;MACtB;IACJ;EACJ,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;EACI9D,MAAM,CAACgE,kBAAkB,GAAG,SAASA,kBAAkB,CAAC3B,KAAK,EAAC;IAC1D,IAAIyB,CAAC;IACL;IACA,IAAIR,KAAK;IACT,IAAIW,KAAK,GAAG,CAAC;IACb,KAAKH,CAAC,IAAIrD,QAAQ,EAAE;MAChB,IAAIM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,QAAQ,EAAEqD,CAAC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC1B,KAAK,CAAC,KAAK,CAAC,EAAE;QAC7E,KAAKiB,KAAK,IAAI7C,QAAQ,CAACqD,CAAC,CAAC,EAAE;UACvBG,KAAK,EAAE;QACX;QACA;MACJ;IACJ;IACA,OAAOA,KAAK;EAChB,CAAC;;EAGD;AACJ;AACA;AACA;AACA;AACA;EACIjE,MAAM,CAACkE,gBAAgB,GAAG,SAASA,gBAAgB,CAAC7B,KAAK,EAAC;IACtD,IAAIyB,CAAC;IACL,IAAIK,IAAI,GAAG,EAAE;IACb,KAAKL,CAAC,IAAIrD,QAAQ,EAAC;MACf,IAAIM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,QAAQ,EAAEqD,CAAC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC1B,KAAK,CAAC,KAAK,CAAC,EAAC;QAC5E8B,IAAI,CAACC,IAAI,CAACN,CAAC,CAAC;MAChB;IACJ;IACA,OAAOK,IAAI;EACf,CAAC;;EAED;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACInE,MAAM,CAACyD,WAAW,GAAG,UAASY,KAAK,EAAC;IAChC,IAAIC,qBAAqB,GAAG,UAASjC,KAAK,EAAE;QACpC,IAAIyB,CAAC;QACL,KAAMA,CAAC,IAAIrD,QAAQ,EAAE;UACjB,IAAKM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,QAAQ,EAAEqD,CAAC,CAAC,IAAIA,CAAC,CAACC,OAAO,CAAC1B,KAAK,CAAC,KAAK,CAAC,EAAE;YAC9E;YACA,OAAO,IAAI;UACf;QACJ;QAEA,OAAO,KAAK;MAChB,CAAC;MACDkC,OAAO,GAAM,OAAOF,KAAK,KAAK,QAAQ,KAAMtD,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACT,QAAQ,EAAE4D,KAAK,CAAC,IAAIC,qBAAqB,CAACD,KAAK,CAAC,CAAE;MACnIG,OAAO,GAAM,CAACD,OAAO,IAAI,OAAOF,KAAK,KAAK,QAAQ;MAClDI,UAAU,GAAG,OAAOJ,KAAK,KAAK,UAAU;MACxCK,MAAM,GAAG,KAAK;MACdZ,CAAC;MAAEtC,OAAO;MAAEmD,CAAC;IAEjB,IAAIJ,OAAO,EAAC;MACRvE,MAAM,CAAC6D,kBAAkB,CAACQ,KAAK,CAAC;MAChC;IACJ;IAEA,KAAMP,CAAC,IAAIrD,QAAQ,EAAE;MACjB,IAAKM,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAAET,QAAQ,EAAEqD,CAAC,CAAE,EAAE;QACtDtC,OAAO,GAAGf,QAAQ,CAACqD,CAAC,CAAC;QAErB,IAAKU,OAAO,IAAIhD,OAAO,CAAC6C,KAAK,CAAC,EAAE;UAC5B,OAAO7C,OAAO,CAAC6C,KAAK,CAAC;UACrBK,MAAM,GAAGL,KAAK;UACd;UACA;QACJ;QAEA,IAAII,UAAU,EAAE;UACZ,KAAME,CAAC,IAAInD,OAAO,EAAE;YAChB,IAAIT,MAAM,CAACC,SAAS,CAACC,cAAc,CAACC,IAAI,CAACM,OAAO,EAAEmD,CAAC,CAAC,IAAInD,OAAO,CAACmD,CAAC,CAAC,KAAKN,KAAK,EAAC;cACzE,OAAO7C,OAAO,CAACmD,CAAC,CAAC;cACjBD,MAAM,GAAG,IAAI;YACjB;UACJ;QACJ;MACJ;IACJ;IAEA,OAAOA,MAAM;EACjB,CAAC;AACL,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}